目前8976 OTA升级需要的改动：

LINUX/android/device/qcom/common/rootdir/etc/init.qcom.sh
#328 if和fi所在行注释掉

common/build/build.py
#216-224
# Add mbn_ota.txt
      modem_ota_file = os.path.join(os.path.dirname(__file__), 'mbn_ota.txt')
      modem_ota_dir ='image/modem_pr'
      if os.path.exists(modem_ota_file):
          ret_code_fatadd_tool = lg.log_exec(['python',fatadd_tool,'-n',fat_file_dest,'-f' + modem_ota_file,'-d'+ modem_ota_dir],verbose=0)
          if ret_code_fatadd_tool != 0:
              err_msg = 'update_common_info.py:' + 'python'+' '+fatadd_tool+' '+'-n'+' '+fat_file_dest+' '+'-f' + modem_ota_file,'-d'+ modem_ota_dir + ':Failed'
              lg.log(err_msg)
              raise Exception(err_msg)
			  
common/build/mbn_ota.txt
mcfg_sw/generic/apac/reliance/commerci/mcfg_sw.mbn
mcfg_sw/generic/common/row/gen_3gpp/mcfg_sw.mbn
mcfg_sw/generic/china/cmcc/commerci/volte_op/mcfg_sw.mbn

contents_8976_64.xml
#569-574
	<step filter="non_hlos" type="exec">
      <params>python @tool_name -n @destn -f @src_file -d image/modem_pr</params>
      <tool_name>fatadd.py</tool_name>
      <destn>./bin/$[flavor:.]/NON-HLOS.bin</destn>
      <src_files>./mbn_ota.txt</src_files>
    </step>
	
modem_proc/mcfg/mcfg_gen/src/mcfg_sw_gen_devcfg.c
自动生成

MBN关联的三个文件--default sw mbn更新
版本号：0x07E0000B --> 0x07E3000B
#23-26:
	<NvEfsItemData mcfgAttributes="0x19" mcfgVariant="2" fullpathname="/nv/item_files/mcfg/mcfg_autoselect_by_uim">
		<Member sizeOf="1" type="uint8">7 </Member>
		<Member sizeOf="1" type="uint8">7 </Member>
	</NvEfsItemData>
	
==============
==============
LINUX/android/vendor/qcom/proprietary/qcril/qcril_qmi/qcril_qmi_mbn_ota_daemon.c
#113
static inline int is_same_type_AACC_mbn(const char* version_local, const char* version_remote)
{
    /* AA == AA, CC == CC */
    return ((version_local[1] == version_remote[1])
               && (version_local[3] == version_remote[3]));
}

#294
static int load_new_mbn_CKT(char *mbn_file,struct pdc_config_pdc_info* new_config_id_CKT)
{
    int ret_val = PDC_ERROR;

    if (generate_config_id(mbn_file, new_config_id_CKT) == PDC_SUCCESS) {
        ret_val = pdc_load_config(mbn_file, new_config_id_CKT, PDC_CONFIG_TYPE_MODEM_SW_V01);
    }

    return ret_val;
}

#314
int need_restart_modem = 0;

#370
for (i = 0; i < n_local_file; i++) {
		if (!p_local_list[i].is_matched){			
			ret_val = load_new_mbn_CKT(p_local_list[i].file_name,&new_config_id);
			if(ret_val != PDC_SUCCESS) {
				RLOGE("Failed to load new MBN: %s, error code: %d", p_local_list[i].file_name, ret_val);
			}
			else {RLOGE("load new MBN: %s", p_local_list[i].file_name);}
			
			for (j = 0; j < n_modem_list; j++){
				if ((!p_modem_list[j].is_matched) && (is_same_type_AACC_mbn((char*)(&p_local_list[i].version),(char*)(&p_modem_list[j].config_info.config_version))) && (p_modem_list[j].is_current)){
					/* deactivate the corresponding SUBs */
					int sub_idx = 0;
					ret_val = 0;
					for (sub_idx = 0; sub_idx < 3; sub_idx++)
					{
					 if(p_modem_list[j].sub & (1 << sub_idx))
					  {
						RLOGE("the MBN in EFS is current config: %s, p_modem_list[j].sub:%d, sub_idx:%d ", p_modem_list[j].config_id.config_id, p_modem_list[j].sub, sub_idx);
						ret_val |= (pdc_deactivate_config(sub_idx, PDC_CONFIG_TYPE_MODEM_SW_V01) != PDC_SUCCESS);

						if(sub_idx != 2)pdc_select_config(&new_config_id, PDC_CONFIG_TYPE_MODEM_SW_V01, sub_idx);
						need_restart_modem =1;
					  }
					}
					/* Any deactivation failed, just print message and continue */
					if(ret_val)
					  RLOGE("deactivation failed");

				}				
			}
		}
    }    	

有一部分要删除的
#411左右
/* Upload local MBNs to EFS that are not matched */
    for (idx = 0; idx < n_local_file; idx++) {
        if (!p_local_list[idx].is_matched) {
            ret_val = load_new_mbn(p_local_list[idx].file_name);
            if (ret_val != PDC_SUCCESS) {
                RLOGE("Failed to load new MBN: %s, error code: %d", p_local_list[idx].file_name, ret_val);
            }
        }
    }

#423
if (need_restart_modem) {
        /* using activate command to trigger modem SSR */
        pdc_activate_config(PDC_CONFIG_TYPE_MODEM_SW_V01, 0);
    }